<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.asyncapi.generator</groupId>
    <artifactId>file-transfer-test</artifactId>
    <version>DEV-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <powermock.version>1.6.6</powermock.version>
        <snakeyaml.version>1.30</snakeyaml.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>2.7.7</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.24</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.14.2</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka</artifactId>
            <version>2.8.11</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>2.17.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-integration</artifactId>
            <version>2.7.7</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.integration</groupId>
            <artifactId>spring-integration-kafka</artifactId>
            <version>5.5.16</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.kafka</groupId>
            <artifactId>spring-kafka-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>1.15.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>1.18.22</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.asyncapi.generator</groupId>
                <artifactId>kafka-generator-plugin</artifactId>
                <version>${project.version}</version>
                <configuration>

                </configuration>
                <executions>
                    <execution>
                        <id>generateKafkaStreamCreate</id>
                        <goals>
                            <goal>generateKafkaStream</goal>
                        </goals>
                        <configuration>
                            <asyncApiSchema>asyncapi/example.yaml</asyncApiSchema>
                            <channel>common-utils.file-trasfer.create-transfer-request</channel>
                            <packageName>com.example2.create.stream</packageName>
                            <propertyDirectory>${project.basedir}/src/main/resources/create</propertyDirectory>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <defaultNaming>file.transfer.create</defaultNaming>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generateKafkaCreate</id>
                        <goals>
                            <goal>generateKafka</goal>
                        </goals>
                        <configuration>
                            <asyncApiSchema>asyncapi/example.yaml</asyncApiSchema>
                            <channel>common-utils.file-trasfer.create-transfer-request</channel>
                            <packageName>com.example2.create.base</packageName>
                            <propertyDirectory>${project.basedir}/src/main/resources/create</propertyDirectory>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <defaultNaming>file.transfer.create</defaultNaming>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generateKafkaStreamStatus</id>
                        <goals>
                            <goal>generateKafkaStream</goal>
                        </goals>
                        <configuration>
                            <asyncApiSchema>asyncapi/example.yaml</asyncApiSchema>
                            <channel>common-utils.file-trasfer.transfer-status</channel>
                            <packageName>com.example2.status.stream</packageName>
                            <propertyDirectory>${project.basedir}/src/main/resources/status</propertyDirectory>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <defaultNaming>file.transfer.status</defaultNaming>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generateKafkaStatus</id>
                        <goals>
                            <goal>generateKafka</goal>
                        </goals>
                        <configuration>
                            <asyncApiSchema>asyncapi/example.yaml</asyncApiSchema>
                            <channel>common-utils.file-trasfer.transfer-status</channel>
                            <packageName>com.example2.status.base</packageName>
                            <propertyDirectory>${project.basedir}/src/main/resources/status</propertyDirectory>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <defaultNaming>file.transfer.status</defaultNaming>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>